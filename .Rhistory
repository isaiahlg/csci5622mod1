View(var_labels)
# get the variable labels for all column headers
var_labels <- get_variable_labels(sl19)
# read in the dataset
sl19 <- readRDS(downloads$SLHR7AFL)
# get the variable labels for all column headers
var_labels <- get_variable_labels(sl19)
# read in the dataset
sl19 <- readRDS(downloads$SLHR7AFL)
# export data and labels to CSV for visual inspection and workability on Mac
write.csv(var_labels, "./exports/var_labels.csv", row.names=FALSE)
var_labels <- read.csv("./exports/var_labels.csv")
View(var_labels)
View(var_labels)
# export data and labels to CSV for visual inspection and workability on Mac
write.csv(var_labels, "./exports/var_labels.csv", row.names=FALSE)
var_labels <- read.csv("./exports/var_labels.csv")
View(var_labels)
write.csv(sl19, "./exports/sl19.csv", row.names=FALSE)
# reread in data from csv files
sl19 <- read.csv("./exports/sl19.csv")
knitr::opts_chunk$set(echo = TRUE)
library(rdhs)
# set credentials for accessing DHS API
set_rdhs_config(email = "isaiah.lyons-galante@colorado.edu",
project = "Machine Learning Class Project")
# figure out what DHS uses for country IDs
ids <- dhs_countries(returnFields=c("CountryName", "DHS_CountryCode"))
str(ids)
# find all surveys for Sierra Leone
surveys <- dhs_surveys(countryIds = c("SL"),
surveyType = "DHS",
surveyYearStart = 2018)
head(surveys)
# desired survey ID = "SL2019DHS"
# find the datasets from this survey
datasets <- dhs_datasets(surveyIds = surveys$SurveyId,
fileFormat = "flat")
head(datasets, n=20)
# desired filename = SLHR7AFL.ZIP
# download actual datasets
downloads <- get_datasets("SLHR7AFL.ZIP")
# read in the dataset
sl19 <- readRDS(downloads$SLHR7AFL)
# head(sl19) # 3455 columns! Yikes.
# get the variable labels for all column headers
var_labels <- get_variable_labels(sl19)
# head(var_labels) # 3455 rows now, just two columns, variable and description
# export data and labels to CSV for visual inspection and workability on PC
# write.csv(var_labels, "C:\\Users\\ilyon\\Documents\\code\\csci5622\\module1\\exports\\var_labels.csv")
# write.csv(sl19, "C:\\Users\\ilyon\\Documents\\code\\csci5622\\module1\\exports\\sl19.csv")
# export data and labels to CSV for visual inspection and workability on Mac
write.csv(var_labels, "./exports/var_labels.csv", row.names = FALSE)
write.csv(sl19, "./exports/sl19.csv", row.names = FALSE)
# reread in data from csv files
sl19 <- read.csv("./exports/sl19.csv")
var_labels <- read.csv("./exports/var_labels.csv")
# drop all sections but the first one
sl19sec1 <- sl19[,c(1:148)]
varSec1 <- var_labels[c(1:148),]
# convert columns of interest from numeric to factor
toFactor <- c(2,3,8,9,27,28,42,53,57,58,59,60,61,62,63,64,65,66,67,69,71,73,75,76,78,90,108,110,111,112,113,114,115,117,118,119,120,121,122,123,129,142,144)
sl19sec1[toFactor] <- sapply(sl19sec1[toFactor], as.factor)
sapply(sl19sec1, class)
# convert and export
write.csv(sl19sec1, "./exports/sl19sec1.csv", row.names = FALSE)
write.csv(varSec1, "./exports/varSec1.csv", row.names = FALSE)
# reread in data from csv files
sl19sec1 <- read.csv("./exports/sl19sec1.csv")
varSec1 <- read.csv("./exports/varSec1.csv")
# list columns to be kept
keep <- c(2,3,6,7,8,9,11,12,13,14,15,16,17,18,27,28,36,42,44,45,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,90,91,92,93,94,95,96,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,129,142,143,144,145,146,147,148)
# filter data and variables descriptions to just keep good columns
sl19keep <- sl19sec1[,keep]
varsKeep <- varSec1[keep,]
# export to CSVs
write.csv(varsKeep, "./exports/varsKeep.csv", row.names = FALSE)
write.csv(sl19keep, "./exports/sl19keep.csv", row.names = FALSE)
# read in cleaned up CSV
sl19sec1 <- read.csv("./exports/sl19sec1.csv")
varSec1 <- read.csv("./exports/varSec1.csv")
# look through CSV by hand to eliminate more variables
keep2 <- c(2,3,8,9,13,14,15,16,17,27,28,36,42,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,78,90,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,129,142,143,144,145,146)
sl19keep2 <- sl19[,keep2]
varsKeep2 <- var_labels[keep2,]
# export to CSVs
write.csv(varsKeep2, "./exports/varsKeep2.csv", row.names = FALSE)
write.csv(sl19keep2, "./exports/sl19keep2.csv", row.names = FALSE)
sapply(sl19keep2, class)
head(sl19keep2[,2:length(sl19keep2)])
length(sl19keep2)
str(sl19keep2)
hist(sl19keep$hv009) # number of household members
View(varsKeep2)
View(varsKeep2)
View(sl19keep2)
View(sl19keep2)
test <- sapply(sl19sec1[,toFactor], as.factor)
View(test)
sl19sec1[,toFactor] <- sapply(sl19sec1[,toFactor], as.factor)
sapply(sl19sec1, class)
# convert columns of interest from numeric to factor
toFactor <- c(2,3,8,9,27,28,42,53,57,58,59,60,61,62,63,64,65,66,67,69,71,73,75,76,78,90,108,110,111,112,113,114,115,117,118,119,120,121,122,123,129,142,144)
# drop all sections but the first one
sl19sec1 <- sl19[,c(1:148)]
# convert columns of interest from numeric to factor
toFactor <- c(2,3,8,9,27,28,42,53,57,58,59,60,61,62,63,64,65,66,67,69,71,73,75,76,78,90,108,110,111,112,113,114,115,117,118,119,120,121,122,123,129,142,144)
sl19sec1[,toFactor] <- sapply(sl19sec1[,toFactor], as.factor)
sapply(sl19sec1, class)
sl19sec1[toFactor] <- sapply(sl19sec1[toFactor], as.factor)
sapply(sl19sec1, class)
class(sl19sec1[,2])
class(sl19sec1[,1])
str(sl19sec1[,1])
str(sl19sec1[,1])
head(sl19sec1[,1])
head(sl19sec1[1])
head(sl19sec1[1:2])
head(sl19sec1[,1:2])
head(sl19sec1[,1:2])
head(sl19sec1[1:3,1:2])
head(sl19sec1[1:3,1:2])
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[1]
as.factor(sl19test[1])
sapply(sl19test[1], as.factor)
sapply(sl19test, as.factor)
sl19test <- sapply(sl19test, as.factor)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test <- sapply(sl19test, as.factor)
head(sl19test)
View(sl19test)
View(sl19test)
sl19test <- sapply(sl19test, as.numeric)
head(sl19test)
View(sl19sec1)
sl19test <- sapply(sl19test, as.numeric)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
sl19test[1] <- sapply(sl19test[1], as.numeric)
head(sl19test)
head(sl19test)
head(sl19test)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[1] <- sapply(sl19test[1], as.numeric)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[,1] <- sapply(sl19test[,1], as.numeric)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[,3] <- sapply(sl19test[,3], as.numeric)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
sl19test[,3] <- sapply(sl19test[,3], as.factor)
head(sl19test)
sl19test[,2:3] <- sapply(sl19test[,2:3], as.factor)
head(sl19test)
head(sl19test)
sl19test[,2:3] <- sapply(sl19test[,2:3], as.factor)
head(sl19test)
sl19test[,c(2,3)] <- sapply(sl19test[,c(2,3)], as.factor)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[,c(2,3)] <- sapply(sl19test[,c(2,3)], as.factor)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[,3] <- sapply(sl19test[,3], as.factor)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[,"hv001"] <- sapply(sl19test[,"hv001"], as.factor)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[,c("hv000","hv001")] <- sapply(sl19test[c("hv000","hv001")], as.factor)
head(sl19test)
sl19test[,c("hv000","hv001")] <- sapply(sl19test[,c("hv000","hv001")], as.factor)
head(sl19test)
sl19test[,c("hv000","hv001")] <- sapply(sl19test[,c("hv000","hv001")], as.factor)
sl19test[c("hv000","hv001")] <- sapply(sl19test[c("hv000","hv001")], as.factor)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[c("hv000","hv001")] <- sapply(sl19test[c("hv000","hv001")], as.factor)
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test[,2:3] <- sapply(sl19test[,2:3], as.factor)
# dplyr::mutate_at(), mutate_if()
head(sl19test)
sl19test[,3] <- sapply(sl19test[,3], as.factor)
# dplyr::mutate_at(), mutate_if()
head(sl19test)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
# dplyr::mutate_at(), mutate_if()
# idea: just write each column individually
sl19test <- sl19test %>% mutate_at(c(2:3), as.factor)
library(tidyverse)
sl19test <- sl19test %>% mutate_at(c(2:3), as.factor)
head(sl19test)
sl19test <- sl19test %>% mutate_at(toFactor, as.factor)
sl19test <- sl19sec1[1:5,1:3]
head(sl19test)
sl19test <- sl19test %>% mutate_at(c(1,2,3), as.factor)
head(sl19test)
sl19sec1 <- sl19sec1 %>% mutate_at(toFactor, as.factor)
head(sl19sec1)
sapply(sl19sec1, class)
# convert and export
write.csv(sl19sec1, "./exports/sl19sec1.csv", row.names = FALSE)
write.csv(varSec1, "./exports/varSec1.csv", row.names = FALSE)
# read in cleaned up CSV
sl19sec1 <- read.csv("./exports/sl19sec1.csv")
varSec1 <- read.csv("./exports/varSec1.csv")
# look through CSV by hand to eliminate more variables
keep2 <- c(2,3,8,9,13,14,15,16,17,27,28,36,42,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,78,90,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,129,142,143,144,145,146)
sl19keep2 <- sl19[,keep2]
varsKeep2 <- var_labels[keep2,]
# export to CSVs
write.csv(varsKeep2, "./exports/varsKeep2.csv", row.names = FALSE)
write.csv(sl19keep2, "./exports/sl19keep2.csv", row.names = FALSE)
head(sl19sec1[1:3,1:2])
sapply(sl19keep2, class)
sl19keep2 <- sl19sec1[,keep2]
varsKeep2 <- varSec1[keep2,]
# export to CSVs
write.csv(varsKeep2, "./exports/varsKeep2.csv", row.names = FALSE)
write.csv(sl19keep2, "./exports/sl19keep2.csv", row.names = FALSE)
sapply(sl19keep2, class)
View(sl19sec1)
# drop all sections but the first one
sl19sec1 <- sl19[,c(1:148)]
varSec1 <- var_labels[c(1:148),]
# convert columns of interest from numeric to factor
toFactor <- c(2,3,8,9,27,28,42,53,57,58,59,60,61,62,63,64,65,66,67,69,71,73,75,76,78,90,108,110,111,112,113,114,115,117,118,119,120,121,122,123,129,142,144)
sl19sec1 <- sl19sec1 %>% mutate_at(toFactor, as.factor)
head(sl19sec1)
# convert and export
write.csv(sl19sec1, "./exports/sl19sec1.csv", row.names = FALSE)
write.csv(varSec1, "./exports/varSec1.csv", row.names = FALSE)
head(sl19sec1)
# reread in data from csv files
sl19sec1 <- read.csv("./exports/sl19sec1.csv")
varSec1 <- read.csv("./exports/varSec1.csv")
head(sl19sec1)
?readRDS
toFactor2 <- c("hv000","hv001","hv006","hv007","hv024","hv025","hv045c","hv201","hv205","hv206","hv207","hv208","hv209","hv210","hv211","hv212","hv213","hv214","hv215","hv217","hv219","hv221","hv226","hv227","hv230a","hv237","hv241","hv243a","hv243b","hv243c","hv243d","hv243e","hv244","hv246","hv246a","hv246b","hv246c","hv246d","hv246e","hv246f","hv247","hv270","hv270a")
# convert columns of interest from numeric to factor
toFactor <- c(2,3,8,9,27,28,42,53,57,58,59,60,61,62,63,64,65,66,67,69,71,73,75,76,78,90,108,110,111,112,113,114,115,117,118,119,120,121,122,123,129,142,144)
toFactor2 <- c("hv000","hv001","hv006","hv007","hv024","hv025","hv045c","hv201","hv205","hv206","hv207","hv208","hv209","hv210","hv211","hv212","hv213","hv214","hv215","hv217","hv219","hv221","hv226","hv227","hv230a","hv237","hv241","hv243a","hv243b","hv243c","hv243d","hv243e","hv244","hv246","hv246a","hv246b","hv246c","hv246d","hv246e","hv246f","hv247","hv270","hv270a")
sl19keep3 <- sl19keep2 %>% mutate_at(toFactor2, as.factor)
# reread in data from csv files
sl19sec1 <- read.csv("./exports/sl19sec1.csv")
varSec1 <- read.csv("./exports/varSec1.csv")
# read in cleaned up CSV
sl19sec1 <- read.csv("./exports/sl19sec1.csv")
# columns of interest
keep2names <- c("hv000","hv001","hv006","hv007","hv010","hv011","hv012","hv013","hv014","hv024","hv025","hv040","hv045c","hv201","hv204","hv205","hv206","hv207","hv208","hv209","hv210","hv211","hv212","hv213","hv214","hv215","hv216","hv217","hv219","hv220","hv221","hv226","hv227","hv230a","hv237","hv241","hv243a","hv243b","hv243c","hv243d","hv243e","hv244","hv245","hv246","hv246a","hv246b","hv246c","hv246d","hv246e","hv246f","hv247","hv270","hv271","hv270a","hv271a","hml1")
# filter
sl19keep2 <- sl19sec1[,keep2names]
varsKeep2 <- varSec1[keep2names,]
# filter
sl19keep <- sl19sec1[,keep2names]
vars2keep <- varSec1[keep2names,]
head(sl19keep)
# export to CSVs
write.csv(vars2keep, "./exports/vars2keep.csv", row.names = FALSE)
write.csv(sl19keep, "./exports/sl19keep.csv", row.names = FALSE)
saveRDS(sl19keep, file="./exports/sl19keep.rds")
sl19keep <- sl19keep %>% mutate_at(factorCols, as.factor)
factorCols <- c("hv000","hv001","hv006","hv007","hv024","hv025","hv045c","hv201","hv205","hv206","hv207","hv208","hv209","hv210","hv211","hv212","hv213","hv214","hv215","hv217","hv219","hv221","hv226","hv227","hv230a","hv237","hv241","hv243a","hv243b","hv243c","hv243d","hv243e","hv244","hv246","hv246a","hv246b","hv246c","hv246d","hv246e","hv246f","hv247","hv270","hv270a")
sl19keep <- sl19keep %>% mutate_at(factorCols, as.factor)
saveRDS(sl19keep, file="./exports/sl19keep.rds")
head(sl19keep)
sl19keep5 <- readRDS("./exports/sl19keep.rds")
sl19keep5 <- readRDS("./exports/sl19keep.rds")
head(sl19keep5)
head(sl19keep)
# read in the dataset
sl19 <- readRDS(downloads$SLHR7AFL)
# read in cleaned up CSV
sl19sec1 <- read.csv("./exports/sl19sec1.csv")
View(sl19)
knitr::opts_chunk$set(echo = TRUE)
# load needed libraries
library(rhds)
knitr::opts_chunk$set(echo = TRUE)
# load needed libraries
library(rdhs)
library(tidyverse)
# set credentials for accessing DHS API
set_rdhs_config(email = "isaiah.lyons-galante@colorado.edu",
project = "Machine Learning Class Project")
# figure out what DHS uses for country IDs
ids <- dhs_countries(returnFields=c("CountryName", "DHS_CountryCode"))
str(ids)
# find all surveys for Sierra Leone
surveys <- dhs_surveys(countryIds = c("SL"),
surveyType = "DHS",
surveyYearStart = 2018)
head(surveys)
# desired survey ID = "SL2019DHS"
# find the datasets from this survey
datasets <- dhs_datasets(surveyIds = surveys$SurveyId,
fileFormat = "flat")
head(datasets, n=20)
# desired filename = SLHR7AFL.ZIP
# download actual datasets
downloads <- get_datasets("SLHR7AFL.ZIP")
# read in the dataset
sl19 <- readRDS(downloads$SLHR7AFL)
# head(sl19) # 3455 columns! Yikes.
# get the variable labels for all column headers
var_labels <- get_variable_labels(sl19)
# head(var_labels) # 3455 rows now, just two columns, variable and description
# export data and labels to CSV for visual inspection and workability on Mac
saveRDS(var_labels, "./exports/var_labels.rds")
saveRDS(sl19, "./exports/sl19.rds")
# write to csv as well
write.csv(var_labels, "./exports/var_labels.csv", row.names = FALSE)
write.csv(sl19, "./exports/sl19.csv", row.names = FALSE)
# reread in data from csv files
sl19 <- read.rds("./exports/sl19.rds")
# reread in data from csv files
sl19 <- readRDS("./exports/sl19.rds")
var_labels <- readRDS("./exports/var_labels.rds")
# drop all sections but the first one
sl19sec1 <- sl19[,c(1:148)]
varSec1 <- var_labels[c(1:148),]
# export
saveRDS(sl19sec1, "./exports/sl19sec1.rds")
saveRDS(varSec1, "./exports/varSec1.rds")
# write to csv as well
write.csv(varSec1, "./exports/varSec1.csv", row.names = FALSE)
write.csv(sl19sec1, "./exports/sl19sec1.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
# load needed libraries
library(rdhs)
library(tidyverse)
# set credentials for accessing DHS API
set_rdhs_config(email = "isaiah.lyons-galante@colorado.edu",
project = "Machine Learning Class Project")
# figure out what DHS uses for country IDs
ids <- dhs_countries(returnFields=c("CountryName", "DHS_CountryCode"))
str(ids)
# find all surveys for Sierra Leone
surveys <- dhs_surveys(countryIds = c("SL"),
surveyType = "DHS",
surveyYearStart = 2018)
head(surveys)
# desired survey ID = "SL2019DHS"
# find the datasets from this survey
datasets <- dhs_datasets(surveyIds = surveys$SurveyId,
fileFormat = "flat")
head(datasets, n=20)
# desired filename = SLHR7AFL.ZIP
# download actual datasets
downloads <- get_datasets("SLHR7AFL.ZIP")
# read in the dataset
sl19 <- readRDS(downloads$SLHR7AFL)
# head(sl19) # 3455 columns! Yikes.
# get the variable labels for all column headers
var_labels <- get_variable_labels(sl19)
# head(var_labels) # 3455 rows now, just two columns, variable and description
# export data and labels to CSV for visual inspection and usability in other programs
saveRDS(var_labels, "./exports/var_labels.rds")
saveRDS(sl19, "./exports/sl19.rds")
# write to csv as well
# write.csv(var_labels, "./exports/var_labels.csv", row.names = FALSE)
# write.csv(sl19, "./exports/sl19.csv", row.names = FALSE)
# reread in data from csv files
sl19 <- readRDS("./exports/sl19.rds")
var_labels <- readRDS("./exports/var_labels.rds")
# drop all sections but the first one
sl19sec1 <- sl19[,c(1:148)]
varSec1 <- var_labels[c(1:148),]
# export
saveRDS(sl19sec1, "./exports/sl19sec1.rds")
saveRDS(varSec1, "./exports/varSec1.rds")
# write to csv as well
# write.csv(varSec1, "./exports/varSec1.csv", row.names = FALSE)
# write.csv(sl19sec1, "./exports/sl19sec1.csv", row.names = FALSE)
# read in shortened RDS
sl19sec1 <- readRDS("./exports/sl19sec1.rds")
varSec1 <- read.rds("./exports/varSec1.rds")
knitr::opts_chunk$set(echo = TRUE)
# load needed libraries
library(rdhs)
library(tidyverse)
# set credentials for accessing DHS API
set_rdhs_config(email = "isaiah.lyons-galante@colorado.edu",
project = "Machine Learning Class Project")
# figure out what DHS uses for country IDs
ids <- dhs_countries(returnFields=c("CountryName", "DHS_CountryCode"))
str(ids)
# find all surveys for Sierra Leone
surveys <- dhs_surveys(countryIds = c("SL"),
surveyType = "DHS",
surveyYearStart = 2018)
head(surveys)
# desired survey ID = "SL2019DHS"
# find the datasets from this survey
datasets <- dhs_datasets(surveyIds = surveys$SurveyId,
fileFormat = "flat")
head(datasets, n=20)
# desired filename = SLHR7AFL.ZIP
# download actual datasets
downloads <- get_datasets("SLHR7AFL.ZIP")
# read in the dataset
sl19 <- readRDS(downloads$SLHR7AFL)
# head(sl19) # 3455 columns! Yikes.
# get the variable labels for all column headers
var_labels <- get_variable_labels(sl19)
# head(var_labels) # 3455 rows now, just two columns, variable and description
# export data and labels to CSV for visual inspection and usability in other programs
saveRDS(var_labels, "./exports/var_labels.rds")
saveRDS(sl19, "./exports/sl19.rds")
# write to csv as well
# write.csv(var_labels, "./exports/var_labels.csv", row.names = FALSE)
# write.csv(sl19, "./exports/sl19.csv", row.names = FALSE)
# reread in data from csv files
sl19 <- readRDS("./exports/sl19.rds")
var_labels <- readRDS("./exports/var_labels.rds")
# drop all sections but the first one
sl19sec1 <- sl19[,c(1:148)]
varSec1 <- var_labels[c(1:148),]
# export
saveRDS(sl19sec1, "./exports/sl19sec1.rds")
saveRDS(varSec1, "./exports/varSec1.rds")
# write to csv as well
# write.csv(varSec1, "./exports/varSec1.csv", row.names = FALSE)
# write.csv(sl19sec1, "./exports/sl19sec1.csv", row.names = FALSE)
# read in shortened RDS
sl19sec1 <- readRDS("./exports/sl19sec1.rds")
varSec1 <- readRDS("./exports/varSec1.rds")
# columns of interest
keep2names <- c("hv000","hv001","hv006","hv007","hv010","hv011","hv012","hv013","hv014","hv024","hv025","hv040","hv045c","hv201","hv204","hv205","hv206","hv207","hv208","hv209","hv210","hv211","hv212","hv213","hv214","hv215","hv216","hv217","hv219","hv220","hv221","hv226","hv227","hv230a","hv237","hv241","hv243a","hv243b","hv243c","hv243d","hv243e","hv244","hv245","hv246","hv246a","hv246b","hv246c","hv246d","hv246e","hv246f","hv247","hv270","hv271","hv270a","hv271a","hml1")
# filter
sl19keep <- sl19sec1[,keep2names]
vars2keep <- varSec1[keep2names,]
# convert certain columns to factors
factorCols <- c("hv000","hv001","hv006","hv007","hv024","hv025","hv045c","hv201","hv205","hv206","hv207","hv208","hv209","hv210","hv211","hv212","hv213","hv214","hv215","hv217","hv219","hv221","hv226","hv227","hv230a","hv237","hv241","hv243a","hv243b","hv243c","hv243d","hv243e","hv244","hv246","hv246a","hv246b","hv246c","hv246d","hv246e","hv246f","hv247","hv270","hv270a")
sl19keep <- sl19keep %>% mutate_at(factorCols, as.factor)
# export to RDS
saveRDS(vars2keep, "./exports/vars2keep.rds")
saveRDS(sl19keep, "./exports/sl19keep.rds")
# write to csv as well
write.csv(varSec1, "./exports/varSec1.csv", row.names = FALSE)
write.csv(sl19sec1, "./exports/sl19sec1.csv", row.names = FALSE)
sl19keep <- readRDS("./exports/sl19keep.rds")
head(sl19keep)
str(sl19keep)
hist(sl19keep$hv009) # number of household members
head(sl19keep)
source("~/.active-rstudio-document", echo=TRUE)
head(sl19keep)
View(sl19keep)
hist(sl19keep$hv012) # dejure household members
hist(sl19keep$hv013) # dejure household members
sl19keep <- readRDS("./exports/sl19keep.rds")
head(sl19keep)
hist(sl19keep$hv012) # dejure household members
hist(sl19keep$hv013) # defacto household members
hist(log(sl19keep$hv012))
hist(sqrt(sl19keep$hv012))
View(sl19keep)
View(sl19keep)
hist(sl19keep$hv040) # altitude in meters
boxplot(sl19keep$hv024) # region
plot(sl19keep$hv024) # region
plot(sl19keep$hv024, title="Region") # region
?plot
plot(sl19keep$hv024, main="Region") # region
hist(sl19keep$hv040, main="Altitude (m)") # altitude in meters
hist(sl19keep$hv013, main="# Household Members Defacto") # defacto household members
plot(sl19keep$hv045c, main="Native Language")
pie(sl19keep$hv206, main="Electricity")
nrow(sl19keep)
nrow(sl19keep$hv206 == 1)
nrow(sl19keep$hv206 == "1")
sum(sl19keep$hv206 == "1")
sum(sl19keep$hv206)
== "1"
sum(sl19keep$hv206 == "1")
n <- nrows(sl19keep)
n <- nrow(sl19keep)
elec <- sum(sl19keep$hv206 == "1")
pie(c(elec, n-elec), main="Electricity")
?pie
pie(c(elec, n-elec), labels = c("Yes", "No"), main="Electricity")
elec <- sum(sl19keep$hv206 == "1")
radio <- sum(sl19keep$hv207 == "1")
tele <- sum(sl19keep$hv208 == "1")
fridge <- sum(sl19keep$hv209 == "1")
bicycle <- sum(sl19keep$hv210 == "1")
motorcycle <- sum(sl19keep$hv211 == "1")
car <- sum(sl19keep$hv212 == "1")
pie(c(elec, n-elec), labels = c("Yes", "No"), main="Electricity")
pie(c(radio, n-radio), labels = c("Yes", "No"), main="Radio")
pie(c(tele, n-tele), labels = c("Yes", "No"), main="Television")
pie(c(fridge, n-fridge), labels = c("Yes", "No"), main="Fridge")
pie(c(bicycle, n-bicycle), labels = c("Yes", "No"), main="Bicycle")
pie(c(motorcycle, n-motorcycle), labels = c("Yes", "No"), main="Motorcycle")
pie(c(car, n-car), labels = c("Yes", "No"), main="Car")
